<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<!-- Maven 模型的版本，對於 POM 4.0.0，這個值固定為 4.0.0 -->
	<modelVersion>4.0.0</modelVersion>

	<!--
	========================================================================================== -->
	<!-- 專案基本設定 (Project Coordinates) -->
	<!--
	========================================================================================== -->

	<!-- 專案父級設定：繼承自 Spring Boot 的預設配置。 -->
	<!-- 這會統一管理絕大部分依賴套件的版本，讓我們不必手動指定版本號，有效避免版本衝突。 -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.4.1</version>
		<relativePath /> <!-- 表示從 Maven Repository 尋找 parent POM，而非從相對路徑 -->
	</parent>

	<!-- 專案的唯一標識符 -->
	<groupId>demo</groupId>
	<artifactId>demo</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging> <!-- 將專案打包成 WAR 檔，以便部署到外部的 Servlet 容器 (如 Tomcat) -->
	<name>demo</name>
	<description>demo</description>

	<!--
	========================================================================================== -->
	<!-- 屬性設定 (Properties) -->
	<!--
	========================================================================================== -->
	<properties>
		<!-- 指定專案使用的 Java 版本 -->
		<java.version>17</java.version>
	</properties>

	<!--
	========================================================================================== -->
	<!-- 依賴套件管理 (Dependencies) -->
	<!--
	========================================================================================== -->
	<dependencies>

		<!-- Spring Boot 核心 Web 功能 (包含 Spring MVC, REST 和預設的 Jackson JSON 處理) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Spring Boot 測試框架 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope> <!-- scope 設定為 test，表示此依賴只在測試階段有效，不會被打包 -->
		</dependency>

		<!-- 部署成 WAR 檔時需要：將內嵌的 Tomcat 設為 provided -->
		<!-- 這表示編譯時需要此依賴，但打包時不包含它，因為最終將由外部容器 (如 Tomcat) 提供。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- Spring Data (資料存取) -->
		<!--
		========================================================================================== -->

		<!-- Spring Data JPA：簡化資料庫操作。此 starter 已包含 Hibernate 作為預設 JPA 實現，無需額外引入。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Spring Data Redis：整合 Redis 資料庫 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- Spring Security (安全性) -->
		<!--
		========================================================================================== -->

		<!-- Spring Security：提供身份驗證和授權功能 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- Logging (日誌) -->
		<!--
		========================================================================================== -->

		<!-- 引入 Log4j2，並排除 Spring Boot 預設的 Logback -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- Web 應用程式相關 (JSP, Servlet, WebSocket) -->
		<!--
		========================================================================================== -->

		<!-- Servlet API -->
		<dependency>
			<groupId>jakarta.servlet</groupId>
			<artifactId>jakarta.servlet-api</artifactId>
			<scope>provided</scope> <!-- 由外部 Servlet 容器提供 -->
		</dependency>

		<!-- 【修正】JSP 樣板引擎：若要使用 JSP 視圖，必須加入此依賴來編譯 JSP 檔案 -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSTL for JSP (Jakarta EE 9+ 版本) -->
		<dependency>
			<groupId>org.glassfish.web</groupId>
			<artifactId>jakarta.servlet.jsp.jstl</artifactId>
			<!-- 版本由 spring-boot-starter-parent 管理 -->
		</dependency>

		<!-- WebSocket API -->
		<dependency>
			<groupId>jakarta.websocket</groupId>
			<artifactId>jakarta.websocket-api</artifactId>
			<scope>provided</scope> <!-- 由外部 Servlet 容器提供 -->
		</dependency>

		<!-- Jakarta Expression Language (EL) API -->
		<dependency>
			<groupId>org.glassfish</groupId>
			<artifactId>jakarta.el</artifactId>
			<version>4.0.2</version>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- 郵件發送 (Mail) -->
		<!--
		========================================================================================== -->

		<!-- Spring Boot Mail Starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- Bean Validation (JSR 380) -->
		<!--
		========================================================================================== -->

		<!-- Validation API (已包含在 spring-boot-starter-web 中，通常無需手動加入) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- 資料庫驅動程式 (Database Drivers) -->
		<!--
		========================================================================================== -->

		<!-- Oracle JDBC Driver -->
		<dependency>
			<groupId>com.oracle.database.jdbc</groupId>
			<artifactId>ojdbc8</artifactId>
			<!-- 版本由 spring-boot-starter-parent 管理 -->
		</dependency>

		<!-- MySQL Connector/J Driver -->
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<!-- 版本由 spring-boot-starter-parent 管理 -->
		</dependency>

		<!--
		========================================================================================== -->
		<!-- 樣板引擎 (Template Engine) - Thymeleaf -->
		<!--
		========================================================================================== -->

		<!-- Thymeleaf Starter -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>

		<!-- Thymeleaf Layout Dialect：提供樣板佈局功能 (如樣板繼承) -->
		<dependency>
			<groupId>nz.net.ultraq.thymeleaf</groupId>
			<artifactId>thymeleaf-layout-dialect</artifactId>
		</dependency>

		<!--
		========================================================================================== -->
		<!-- 開發工具 (Developer Tools) -->
		<!--
		========================================================================================== -->

		<!-- Spring Boot DevTools：提供熱部署、LiveReload 等開發便利功能 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional> <!-- 建議設為 optional，避免傳遞到其他依賴此專案的模組 -->
		</dependency>

		<!-- Lombok：透過 Annotation 自動生成 getter, setter, toString 等樣板程式碼 -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope> <!-- provided 表示只在編譯期需要，不打包 -->
		</dependency>

		<!--
		========================================================================================== -->
		<!-- JSON 工具 - Gson (作為預設 Jackson 的替代方案) -->
		<!--
		========================================================================================== -->

		<!-- Google Gson：用於處理 JSON 序列化與反序列化。 -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<!-- 版本由 spring-boot-starter-parent 管理 -->
		</dependency>

		<!--
		========================================================================================== -->
		<!-- 前端資源庫 (WebJars) -->
		<!--
		========================================================================================== -->

		<!-- Bootstrap (via WebJars) -->
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>bootstrap</artifactId>
			<version>4.2.1</version>
		</dependency>

	</dependencies>

	<!--
	========================================================================================== -->
	<!-- 建構設定 (Build) -->
	<!--
	========================================================================================== -->
	<build>
		<plugins>
			<!-- Spring Boot Maven Plugin：將應用程式打包成可執行的 jar/war，並處理相關依賴 -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
