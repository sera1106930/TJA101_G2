<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    
    <!-- =============================================================== -->
    <!-- 專案基本設定 (Project Coordinates & Parent)                     -->
    <!-- =============================================================== -->
    <parent>
        <!-- 核心設定: 繼承 Spring Boot 的預設配置，統一管理所有依賴的版本。-->
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.3.1</version>
        <relativePath/> <!-- 從 Maven 中央倉儲查找 parent -->
    </parent>
    
    <groupId>demo</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>demo</name>
    <description>Demo project for Spring Boot</description>
    
    <properties>
        <!-- 核心設定: 指定專案使用的 Java 版本，17 是 Spring Boot 3.x 的基礎要求。-->
        <java.version>17</java.version>
    </properties>
    
    <dependencies>
        <!-- =============================================================== -->
        <!-- Spring Boot 核心啟動器 (Core Starters)                          -->
        <!-- =============================================================== -->
        

        <!-- 必備: 提供 Web 開發所需的核心功能，如 Spring MVC, REST, 和內嵌的 Tomcat。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        
        <!-- 必備: 提供資料驗證 (Bean Validation) 的功能，使用 @Valid, @NotBlank 等註解。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- 資料庫: 提供 JPA (Java Persistence API) 支援，並自動引入 Hibernate。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>
        
        
        
        
	        <!-- ======================================================= -->
	<!--             Spring Boot 核心測試入門套件              -->
	<!-- ======================================================= -->
	<!-- [不可變動的關鍵字]: spring-boot-starter-test -->
	<!-- 說明: 此依賴會自動引入 JUnit 5, Spring Test, Hamcrest, -->
	<!-- Mockito, AssertJ 等所有專業測試所需的函式庫。      -->
	<dependency>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-test</artifactId>
	    
	    <!-- [不可變動的關鍵字]: test -->
	    <!-- 說明: <scope>test</scope> 表示此依賴只在執行測試時 -->
	    <!-- 才需要，不會被打包到最終的正式產品 (JAR/WAR) 中， -->
	    <!-- 避免了生產環境的程式碼膨脹。                        -->
	    <scope>test</scope>
	</dependency>
	        <!-- =============================================================== -->        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        

        <!-- 資料庫: 提供 Redis 整合支援。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-redis</artifactId>
        </dependency>
        
        <!-- 安全性: 提供 Spring Security 框架，用於處理認證與授權。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        
        <!-- 郵件: 提供 Java Mail 支援，用於收發電子郵件。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>

        <!-- =============================================================== -->
        <!-- 視圖層 (View Layer)                                           -->
        <!-- =============================================================== -->

        <!-- 樣板引擎: 整合 Thymeleaf，用於動態渲染 HTML 頁面。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- JSP 支援 (若專案中需要使用 JSP 頁面) -->
        <dependency>
            <groupId>org.apache.tomcat.embed</groupId>
            <artifactId>tomcat-embed-jasper</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.glassfish.web</groupId>
            <artifactId>jakarta.servlet.jsp.jstl</artifactId>
        </dependency>

        <!-- =============================================================== -->
        <!-- 資料庫驅動 (Database Driver)                                  -->
        <!-- =============================================================== -->

        <!-- MySQL 驅動程式。scope 為 runtime，表示只在執行期需要，編譯期不需要。-->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>
        
        <!-- =============================================================== -->
        <!-- 開發輔助工具 (Developer Tools)                                -->
        <!-- =============================================================== -->

        <!-- 提供開發時的便利功能，如熱部署 (hot-swapping)。optional 為 true 表示此依賴不會被傳遞。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>

        <!-- 簡化樣板程式碼的工具，如自動產生 getter/setter。-->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        
        <!-- =============================================================== -->
        <!-- 測試 (Testing)                                                -->
        <!-- =============================================================== -->
        
        <!-- 提供測試所需的核心函式庫，如 JUnit, Mockito 等。scope 為 test 表示只在測試階段使用。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        
        <!-- =============================================================== -->
        <!-- WAR 打包設定 (Packaging Configuration)                        -->
        <!-- =============================================================== -->

        <!-- 當 packaging 設為 war 時，需將內嵌的 Tomcat 設為 provided，避免與外部伺服器衝突。-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
        	<groupId>
        		0205U_Maven_SpringBootMVC_Thymeleaf_Ver5_SpringData-Jpa
        	</groupId>
        	<artifactId>
        		0205U_Maven_SpringBootMVC_Thymeleaf_Ver5_SpringData-Jpa
        	</artifactId>
        	<version>0.0.1-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
